[gd_scene load_steps=6 format=3 uid="uid://8cl4avn5vj5i"]

[ext_resource type="Script" path="res://camera_3d.gd" id="1_kdsgh"]

[sub_resource type="GDScript" id="GDScript_ia23d"]
resource_name = "mouvementjoueur"
script/source = "extends CharacterBody3D


const SPEED = 5.0

func _physics_process(delta: float) -> void:

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir := Input.get_vector(\"move_left\", \"move_right\", \"move_forward\", \"move_backward\")
	var direction := (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if direction:
		velocity.x = direction.x * SPEED
		velocity.z = direction.z * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)
		velocity.z = move_toward(velocity.z, 0, SPEED)

	move_and_slide()
"

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_0mpg8"]

[sub_resource type="GDScript" id="GDScript_gcmtg"]
script/source = "extends CollisionShape3D


# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta: float) -> void:
	pass
"

[sub_resource type="CapsuleMesh" id="CapsuleMesh_1cqx3"]

[node name="player" type="Node3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.01868, 0)

[node name="CharacterBody3D" type="CharacterBody3D" parent="."]
script = SubResource("GDScript_ia23d")

[node name="CollisionShape3D" type="CollisionShape3D" parent="CharacterBody3D"]
transform = Transform3D(0.85, 0, 0, 0, 0.85, 0, 0, 0, 0.85, 0, 0, 0)
shape = SubResource("CapsuleShape3D_0mpg8")
script = SubResource("GDScript_gcmtg")

[node name="MeshInstance3D" type="MeshInstance3D" parent="CharacterBody3D/CollisionShape3D"]
mesh = SubResource("CapsuleMesh_1cqx3")
skeleton = NodePath("../..")

[node name="Camera3D" type="Camera3D" parent="CharacterBody3D"]
fov = 76.5
script = ExtResource("1_kdsgh")
